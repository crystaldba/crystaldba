name: Release Client

on:
  create

jobs:
  prepare:
    runs-on: ubuntu-20.04
    if: ${{ startsWith(github.ref, 'refs/tags') }}

    outputs:
      release_tag: ${{ steps.get_tag.outputs.RELEASE_TAG }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get current tag
        id: get_tag
        run: |
          TAG=${GITHUB_REF##*/}
          STRIPPED_TAG=${TAG#v}
          echo "RELEASE_TAG=${STRIPPED_TAG}" >> $GITHUB_ENV
          echo "RELEASE_TAG=${STRIPPED_TAG}" >> $GITHUB_OUTPUT

  build_linux_arm64:
    needs: prepare
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./agent
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf gcc g++ zip

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.8.2"

      - name: Build
        run: poetry run build

      - name: Build with Nuitka (Linux ARM64)
        run: |
          poetry run package_arm64

      - name: Prepare Zip Archive
        run: |
          mkdir -p ./package/linux_arm64
          cp -r ./build/linux_arm64/main.dist ./package/linux_arm64/crystal_client_linux_arm64
          cd ./package/linux_arm64
          zip -r ../../crystal_client_linux_arm64.zip crystal_client_linux_arm64

      - name: Upload Linux ARM64 Executable
        uses: actions/upload-artifact@v4
        with:
          name: crystal-client-linux-arm64
          path: ./agent/crystal_client_linux_arm64.zip

  build_macos_arm64:
    needs: prepare
    runs-on: macos-13
    defaults:
      run:
        working-directory: ./agent
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.8.2"

      - name: Build
        run: poetry run build

      - name: Build with Nuitka (macOS ARM64)
        run: |
          poetry run package_macos

      - name: Prepare Zip Archive
        run: |
          mkdir -p ./package/macos_arm64
          cp -r ./build/macos_arm64/main.dist ./package/macos_arm64/crystal_client_macos_arm64
          cd ./package/macos_arm64
          zip -r ../../crystal_client_macos_arm64.zip crystal_client_macos_arm64

      - name: Upload macOS ARM64 Executable
        uses: actions/upload-artifact@v4
        with:
          name: crystal-client-macos-arm64
          path: ./agent/crystal_client_macos_arm64.zip

  build_linux_amd64:
    needs: prepare
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: ./agent
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install system dependencies for cross-compilation
        run: |
          sudo apt-get update
          sudo apt-get install -y patchelf gcc-multilib g++-multilib binutils-x86-64-linux-gnu zip

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "1.8.2"

      - name: Build
        run: poetry run build

      - name: Build with Nuitka (Linux AMD64)
        run: |
          poetry run package_amd64

      - name: Prepare Zip Archive
        run: |
          mkdir -p ./package/linux_amd64
          cp -r ./build/linux_amd64/main.dist ./package/linux_amd64/crystal_client_linux_amd64
          cd ./package/linux_amd64
          zip -r ../../crystal_client_linux_amd64.zip crystal_client_linux_amd64

      - name: Upload Linux AMD64 Executable
        uses: actions/upload-artifact@v4
        with:
          name: crystal-client-linux-amd64
          path: ./agent/crystal_client_linux_amd64.zip

  release_client:
    needs: [build_linux_arm64, build_macos_arm64, build_linux_amd64]
    runs-on: ubuntu-20.04
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.prepare.outputs.release_tag }}
          files: |
            ./artifacts/crystal-client-linux-arm64/crystal_client_linux_arm64.zip
            ./artifacts/crystal-client-macos-arm64/crystal_client_macos_arm64.zip
            ./artifacts/crystal-client-linux-amd64/crystal_client_linux_amd64.zip
          append: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
